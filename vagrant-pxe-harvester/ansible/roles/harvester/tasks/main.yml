---
- name: create Harvester config dir
  file:
    path: /var/www/harvester
    state: directory

- name: chown dir
  file:
    path: /var/www/harvester/
    owner: www-data
    recurse: yes

- set_fact:
    mac: "{{ settings['harvester_network_config']['cluster'][0]['mac'] | lower }}"
    disks: "{{ settings.harvester_network_config.cluster[0].disks }}"

- set_fact:
    nvme_disks: "{{ disks | selectattr(\"bus\", \"defined\") | selectattr(\"bus\", \"eq\", \"nvme\") }}"
    scsi_disks: "{{ disks | selectattr(\"bus\", \"defined\") | selectattr(\"bus\", \"eq\", \"scsi\") }}"
    virt_disks: "{{ ( disks | selectattr(\"bus\", \"undefined\") ) + ( disks | selectattr(\"bus\", \"defined\") | selectattr(\"bus\", \"eq\", \"virtio\") ) }}"

- name: Calculate Iterfaces
  set_fact:
    boot_interface: ens{{ ( virt_disks | length ) + ( [ ( scsi_disks | length ), 1 ] | min ) + 4 }}
    mgmt_interface: ens{{ ( virt_disks | length ) + ( [ ( scsi_disks | length ), 1 ] | min ) + 5 }}

- debug:
    msg: |
      node0 boot interface: {{ boot_interface }}
      node0 mgmt interface: {{ mgmt_interface }}

- name: copy config-create.yaml
  template:
    src: "config-create.yaml.j2"
    dest: /var/www/harvester/config-create.yaml
    owner: www-data
    mode: 0640

- name: create boot entry for the first node
  template:
    src: ipxe-create.j2
    dest: /var/www/harvester/{{ mac }}
    owner: www-data
    mode: 0640

# NOTE(gyee): Ansible pre-process the with_sequence variable so we have to
# make sure end sequence is at least 1 even if we have only one Harvester node
- name: set node sequence fact
  set_fact:
    end_sequence: "{{ [1, settings['harvester_network_config']['cluster'] | length - 1] | max }}"

- name: Joining
  block:

    - include_tasks: _config_join.yml
      vars:
        node_number: "{{ item }}"
      with_sequence: "start=1 end={{ end_sequence }}"

  when: end_sequence | int > 1

- name: download Harvester kernel
  include_tasks: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_kernel_url'] }}"
    media_filename: "harvester-vmlinuz-amd64"

- name: download Harvester ramdisk
  include_tasks: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_ramdisk_url'] }}"
    media_filename: "harvester-initrd-amd64"

- name: download Harvester ISO
  include_tasks: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_iso_url'] }}"
    media_filename: "harvester-amd64.iso"

- name: download Harvester Root FS
  include_tasks: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_rootfs_url'] }}"
    media_filename: "harvester-rootfs-amd64.squashfs"
