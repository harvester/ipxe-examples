---
- name: create Harvester config dir
  file:
    path: /var/www/harvester
    state: directory

- name: copy config-create.yaml
  template:
    src: "config-create.yaml.j2"
    dest: /var/www/harvester/config-create.yaml
    owner: www-data
    mode: 0640

# NOTE(gyee): Ansible pre-process the with_sequence variable so we have to
# make sure end sequence is at least 1 even if we have only one Harvester node
- name: set node sequence fact
  set_fact:
    end_sequence: "{{ settings['harvester_cluster_nodes'] - 1 if settings['harvester_cluster_nodes'] > 1 else 1 }}"

- name: copy config-join.yaml
  template:
    src: "config-join.yaml.j2"
    dest: /var/www/harvester/config-join-{{ item }}.yaml
    owner: www-data
    mode: 0640
  vars:
    node_number: "{{ item }}"
  with_sequence: "start=1 end={{ end_sequence }}"

- name: chown dir
  file:
    path: /var/www/harvester/
    owner: www-data
    recurse: yes

- name: create boot entry for the first node
  template:
    src: ipxe-create.j2
    dest: /var/www/harvester/{{ settings['harvester_network_config']['cluster'][0]['mac']|lower }}
  vars:
    boot_interface: "{{ settings['harvester_network_config']['cluster'][0]['vagrant_interface'] }}"

- name: create boot entry for the cluster members
  template:
    src: ipxe-join.j2
    dest: /var/www/harvester/{{ settings['harvester_network_config']['cluster'][item|int]['mac']|lower }}
  vars:
    node_number: "{{ item }}"
    boot_interface: "{{ settings['harvester_network_config']['cluster'][item|int]['vagrant_interface'] }}"
  with_sequence: "start=1 end={{ end_sequence }}"

- name: download Harvester kernel
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_kernel_url'] }}"
    media_filename: "harvester-vmlinuz-amd64"

- name: download Harvester ramdisk
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_ramdisk_url'] }}"
    media_filename: "harvester-initrd-amd64"

- name: download Harvester ISO
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_iso_url'] }}"
    media_filename: "harvester-amd64.iso"

- name: download Harvester Root FS
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_rootfs_url'] }}"
    media_filename: "harvester-rootfs-amd64.squashfs"
